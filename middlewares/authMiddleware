// middlewares/auth.js (your existing protect)
const jwt = require('jsonwebtoken');
const pool = require('../db/pool');

exports.protect = async (req, res, next) => {
  let token = null;
  if (req.headers.authorization?.startsWith('Bearer ')) {
    token = req.headers.authorization.split(' ')[1];
  }
  if (!token) return res.status(401).json({ error: 'Not authorized, no token' });

  try {
    const decoded = jwt.verify(token, process.env.JWT_SECRET);
    // Make sure user still exists & not deleted/suspended
    const { rows } = await pool.query(
      `SELECT id FROM users WHERE id = $1 AND is_deleted = FALSE AND is_suspended = FALSE`,
      [decoded.userId]
    );
    if (!rows.length) return res.status(401).json({ error: 'Not authorized' });

    req.user = { id: decoded.userId };
    next();
  } catch (err) {
    return res.status(401).json({ error: 'Not authorized, token failed' });
  }
};
