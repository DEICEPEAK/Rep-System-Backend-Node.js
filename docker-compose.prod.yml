# docker-compose.prod.yml
version: "3.8"

services:
  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env.production
    environment:
      NODE_ENV: production
      PORT: 3000
      REDIS_URL: redis://redis:6379
      EMAIL_QUEUE_ENABLED: "1"
    expose:
      - "3000"
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 5

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env.production
    environment:
      NODE_ENV: production
      REDIS_URL: redis://redis:6379
      EMAIL_QUEUE_ENABLED: "1"
      # Ensure the worker runs your worker entrypoint (not the API).
      WORKER_MODE: "email"   # if you branch in index.js; otherwise set a dedicated CMD
    command: ["node", "workers/emailWorker.js"]
    depends_on:
      - redis
    restart: unless-stopped

  caddy:
    image: caddy:2
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
      - caddy_logs:/var/log/caddy
    depends_on:
      - api
    restart: unless-stopped

volumes:
  redis_data:
  caddy_data:
  caddy_config:
  caddy_logs:
